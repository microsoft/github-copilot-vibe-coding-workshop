@using Contoso.BlazorApp.Services
@inject AuthService AuthService
@inject ApiService ApiService

<div class="w-full mt-4 pt-4 border-t border-gray-300">
    <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true" class="flex gap-2 items-start">
        <textarea @bind="content"
                  placeholder="Add a comment"
                  disabled="@(isLoading || AuthService.User == null)"
                  class="flex-1 min-h-[60px] bg-gray-100 dark:bg-gray-800 rounded-md p-3 text-sm text-gray-900 dark:text-white placeholder-gray-400 resize-vertical focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-70">
        </textarea>
        <button type="submit"
                disabled="@(string.IsNullOrWhiteSpace(content) || isLoading || AuthService.User == null)"
                class="bg-blue-600 text-white rounded-md px-4 py-2 text-sm h-10 transition-opacity disabled:opacity-50 disabled:cursor-not-allowed">
            @(isLoading ? "..." : "Post")
        </button>
    </form>
</div>

@code {
    [Parameter] public int PostId { get; set; }
    [Parameter] public EventCallback OnCommentAdded { get; set; }

    private string content = string.Empty;
    private bool isLoading = false;

    private async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(content) || AuthService.User == null) return;

        isLoading = true;

        try
        {
            var response = await ApiService.CreateCommentAsync(PostId, content, AuthService.User.Username);
            content = string.Empty;
            await OnCommentAdded.InvokeAsync();
        }
        catch (Exception ex)
        {
            // Could add a notification system here
            Console.WriteLine($"Error adding comment: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
