@using Contoso.BlazorApp.Services
@inject AuthService AuthService

<Modal IsOpen="IsOpen" OnClose="OnClose">
    <h2 class="text-xl font-semibold text-center mb-6 text-gray-900 dark:text-white">
        Please enter your name
    </h2>

    <div class="w-full mb-4">
        <input type="text" value="@username" @oninput="OnUsernameInput" @onkeypress="HandleKeyPress"
               placeholder="Name" disabled="@isLoading"
               class="w-full bg-gray-100 dark:bg-gray-800 rounded-md p-4 text-base text-gray-900 dark:text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-70" />
    </div>

    @if (!string.IsNullOrEmpty(error))
    {
        <p class="text-red-500 text-sm mb-4 text-center">@error</p>
    }

    <div class="flex justify-center">
        <button @onclick="HandleSubmit"
                disabled="@(isLoading || string.IsNullOrWhiteSpace(username))"
                class="bg-blue-600 text-white rounded-md px-8 py-3 text-sm transition-opacity disabled:opacity-70 disabled:cursor-not-allowed">
            @(isLoading ? "Processing..." : "Done")
        </button>
    </div>
    
    <!-- Debug info -->
    <div class="text-xs text-gray-500 mt-2">
        Debug: username="@username", length=@username.Length, isWhitespace=@string.IsNullOrWhiteSpace(username), isLoading=@isLoading
    </div>
</Modal>

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private string username = string.Empty;
    private bool isLoading = false;
    private string error = string.Empty;

    private void OnUsernameInput(ChangeEventArgs e)
    {
        username = e.Value?.ToString() ?? string.Empty;
        if (!string.IsNullOrEmpty(error))
        {
            error = string.Empty;
        }
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        Console.WriteLine($"HandleSubmit called with username: '{username}'");
        
        if (string.IsNullOrWhiteSpace(username))
        {
            error = "Please enter your name.";
            return;
        }

        isLoading = true;
        error = string.Empty;
        Console.WriteLine("Starting login process...");

        try
        {
            var user = await AuthService.LoginAsync(username);
            Console.WriteLine($"Login successful for user: {user.Username}");
            Console.WriteLine($"IsAuthenticated: {AuthService.IsAuthenticated}");
            
            username = string.Empty;
            Console.WriteLine("Calling OnClose...");
            await OnClose.InvokeAsync();
            Console.WriteLine("OnClose completed");
        }
        catch (Exception ex)
        {
            error = "An error occurred during login. Please try again.";
            Console.WriteLine($"Login error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            Console.WriteLine("HandleSubmit completed");
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !isLoading && !string.IsNullOrWhiteSpace(username))
        {
            await HandleSubmit();
        }
    }
}
